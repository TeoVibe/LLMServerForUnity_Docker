# ==================
# Base Image
# ==================
FROM nvidia/cuda:12.4.1-runtime-ubuntu22.04 AS base

WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends \
    libstdc++6 \
    libgomp1 \
    openssh-server \
    sudo \
    curl \
    unzip \
    wget \
    vim \
    nvtop \
    python3 \
    python3-pip \
    iptables \
    iproute2 \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

COPY shared/backend/requirements.txt /app/backend/requirements.txt
WORKDIR /app/backend
RUN pip install -r requirements.txt

WORKDIR /app/frontend
COPY shared/frontend/package.json shared/frontend/package-lock.json ./
RUN npm install --legacy-peer-deps

RUN mkdir -p /app/server
WORKDIR /app

ARG VERSION=v1.1.10

COPY shared/binaries/* /app/

RUN unzip ./undreamai-${VERSION}-llamacpp.zip -d /app/server/ && \
    unzip ./undreamai-${VERSION}-server.zip -d /app/server/ && \
    rm ./undreamai-${VERSION}-llamacpp.zip ./undreamai-${VERSION}-server.zip

# ==================
# Application
# ==================
FROM base AS final

WORKDIR /app

COPY shared/backend /app/backend
COPY shared/frontend /app/frontend

# Create RunPod entrypoint script with SSH
RUN echo '#!/bin/bash' > /app/entrypoint.sh && \
    echo 'set -e' >> /app/entrypoint.sh && \
    echo 'mkdir -p /run/sshd' >> /app/entrypoint.sh && \
    echo '' >> /app/entrypoint.sh && \
    echo '# Get environment variables for allowlists' >> /app/entrypoint.sh && \
    echo 'CONTROL_PANEL_ALLOWLIST=${CONTROL_PANEL_ALLOWLIST:-0.0.0.0}' >> /app/entrypoint.sh && \
    echo 'LLM_SERVER_ALLOWLIST=${LLM_SERVER_ALLOWLIST:-0.0.0.0}' >> /app/entrypoint.sh && \
    echo 'ALLOWLIST=${ALLOWLIST:-0.0.0.0}' >> /app/entrypoint.sh && \
    echo '' >> /app/entrypoint.sh && \
    echo '# If legacy ALLOWLIST is set but specific allowlists are not, use ALLOWLIST for both' >> /app/entrypoint.sh && \
    echo 'if [ "$ALLOWLIST" != "0.0.0.0" ] && [ "$CONTROL_PANEL_ALLOWLIST" = "0.0.0.0" ]; then' >> /app/entrypoint.sh && \
    echo '    CONTROL_PANEL_ALLOWLIST=$ALLOWLIST' >> /app/entrypoint.sh && \
    echo 'fi' >> /app/entrypoint.sh && \
    echo 'if [ "$ALLOWLIST" != "0.0.0.0" ] && [ "$LLM_SERVER_ALLOWLIST" = "0.0.0.0" ]; then' >> /app/entrypoint.sh && \
    echo '    LLM_SERVER_ALLOWLIST=$ALLOWLIST' >> /app/entrypoint.sh && \
    echo 'fi' >> /app/entrypoint.sh && \
    echo '' >> /app/entrypoint.sh && \
    echo '# Export environment variables for the backend' >> /app/entrypoint.sh && \
    echo 'export CONTROL_PANEL_ALLOWLIST=$CONTROL_PANEL_ALLOWLIST' >> /app/entrypoint.sh && \
    echo 'export LLM_SERVER_ALLOWLIST=$LLM_SERVER_ALLOWLIST' >> /app/entrypoint.sh && \
    echo '' >> /app/entrypoint.sh && \
    echo 'echo "Control Panel Allowlist: $CONTROL_PANEL_ALLOWLIST"' >> /app/entrypoint.sh && \
    echo 'echo "LLM Server Allowlist: $LLM_SERVER_ALLOWLIST"' >> /app/entrypoint.sh && \
    echo '' >> /app/entrypoint.sh && \
    echo 'cd /app/backend' >> /app/entrypoint.sh && \
    echo 'uvicorn main:app --host 0.0.0.0 --port 8000 &' >> /app/entrypoint.sh && \
    echo 'cd /app/frontend' >> /app/entrypoint.sh && \
    echo 'echo "Starting frontend with API proxy..."' >> /app/entrypoint.sh && \
    echo 'npm run preview -- --host 0.0.0.0 --port 3000 &' >> /app/entrypoint.sh && \
    echo 'echo "Server started on port 3000 with API proxy to backend port 8000"' >> /app/entrypoint.sh && \
    echo 'if [ "$#" -eq 0 ]; then' >> /app/entrypoint.sh && \
    echo '    exec /usr/sbin/sshd -D' >> /app/entrypoint.sh && \
    echo 'else' >> /app/entrypoint.sh && \
    echo '    exec "$@"' >> /app/entrypoint.sh && \
    echo 'fi' >> /app/entrypoint.sh && \
    chmod +x /app/entrypoint.sh

WORKDIR /app/frontend
RUN npm run build

EXPOSE 3000 8000 22

ENTRYPOINT ["/app/entrypoint.sh"]